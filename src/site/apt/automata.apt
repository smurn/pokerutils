~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~ 
~~   http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.


 -----
 Table
 -----
 Stefan C. Mueller
 -----
 2010-12-11
 -----
 
Table automata

  A poker game can be modelled as a finite state automata where
traversions are actions by the players or the dealer. For each state there
is a set of allowed actions.

* Actions
  
  * Players

    * Sit-down, get-up

    * fold, call, raise (includes check and blind payment)

    * re-buy

  * Dealer

    * deal cards

    * place / move buttons

    * collect bets into pots

    * move pots to winner

  If visualized, each change on the table might be animated. For this the 
visualization code needs to know the changes. Those changes are closely
related to the actions performed by the player and dealer. But if it is
trivial to see from the action what the change is, then the automata should
be simple. .... not sure about this...

